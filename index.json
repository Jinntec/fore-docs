[{"uri":"https://jinntec.github.io/fore-docs/elements/model/model/","title":"&lt;fx-model&gt;","tags":["model","fx-model"],"description":"","content":"Description The model is responsible for:\ncreating and maintaining the Main Dependency Graph (MDG) creating ModelItems for bound data nodes calculation validation The \u0026lt;fx-model\u0026gt; element is a direct child of \u0026lt;fx-fore\u0026gt; and is itself a container for:\none or more \u0026lt;fx-instance\u0026gt; elements zero, one or more \u0026lt;fx-bind\u0026gt; elements zero, one or more \u0026lt;fx-submission\u0026gt; elements zero, one or more \u0026lt;fx-function\u0026gt; elements \u0026lt;fx-model\u0026gt; \u0026lt;fx-instance\u0026gt;\u0026lt;fx-instance\u0026gt; \u0026lt;fx-instance id=\u0026#34;second\u0026#34;\u0026gt;\u0026lt;fx-instance\u0026gt; \u0026lt;fx-instance id=\u0026#34;third\u0026#34;\u0026gt;\u0026lt;fx-instance\u0026gt; \u0026lt;fx-bind\u0026gt;\u0026lt;/fx-bind\u0026gt; \u0026lt;fx-bind\u0026gt;\u0026lt;/fx-bind\u0026gt; ... \u0026lt;fx-submission id=\u0026#34;load\u0026#34;\u0026gt;\u0026lt;/fx-submission\u0026gt; \u0026lt;fx-submission id=\u0026#34;save\u0026#34;\u0026gt;\u0026lt;/fx-submission\u0026gt; \u0026lt;/fx-model\u0026gt; If there\u0026rsquo;s more than one \u0026lt;fx-instance\u0026gt; or \u0026lt;fx-submission\u0026gt; you need to add an id attribute for identification.\nAttributes none\nEvents Event Description Details model-construct first event to be emitted by Fore - model-construct-done emitted when model has been initialized - rebuild-done when a rebuild has taken place \u0026lsquo;maingraph\u0026rsquo; - the maingraph object being used recalculate-done when a recalculation has taken place \u0026lsquo;subgraph\u0026rsquo; - the subgraph object being used "},{"uri":"https://jinntec.github.io/fore-docs/getstarted/basics/","title":"Basics","tags":["basic"],"description":"","content":"Fore is a set of Web Components sharing the prefix \u0026lsquo;fx-\u0026rsquo; that together implement a complete engine to build highly dynamic, full-featured user interfaces without any script coding.\n\u0026lt;fx-fore\u0026gt; is the root element containing all other elements.\n\u0026lt;fx-fore\u0026gt; ... put other Fore elements or HTML here ... \u0026lt;/fx-fore\u0026gt; In this tutorial we will subsequently add elements to this template to explore the features of Fore.\n"},{"uri":"https://jinntec.github.io/fore-docs/elements/fore/","title":"fx-fore","tags":["fore","fx-fore"],"description":"","content":"The \u0026lt;fx-fore\u0026gt; element establishes a scope of processing similar to a HTML \u0026lt;form\u0026gt; element. It is a container for all other Fore elements and provide the following facilities:\ninits a Fore session refreshes the UI global messaging with toast or modal messages Attributes Name Description default src url to load a \u0026lt;fx-fore\u0026gt; element from another HTML file - show-confirmation either just marker attribute or boolean XPath - if show-confirmation is just used as a marker Fore will check whether data fields have been modified after initial loading. If yes, the confirmation will come up. Likewise when an XPath expression is given as the attribute value it is evaluated to a boolean to decide wether to show the confirmation.\nEvents Name Description compute-exception dispatched in case the dependency graph is cirular refresh-done dispatched after a refresh() run ready dispatched after Fore has fully been initialized error dispatches error when template expression fails to evaluate Examples All Demo files page exit confirmation "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/action/","title":"&lt;fx-action&gt;","tags":["elements","actions","action"],"description":"","content":"Description \u0026lt;fx-action\u0026gt; is a container action element that can take other actions as children and defer their update cycle to the end of the action block.\nThis is useful when you e.g. want to set several values at once without the cost of each action to be recalculated, revalidated and refreshed.\nScript Actions It is possible to call JavaScript from an \u0026lt;fx-action\u0026gt; by using the src attribute. For an example see script actions or the source of this file (doc/reference.html).\nAttributes Name Description delay delay before action is executed in milliseconds. event the event name this action is listening to if boolean XPath expression. Action is only executed if this returns true. src optional attribute to point to a JavaScript file containing a single function to be called. target id reference to element this action attaches to while boolean XPath expression. Action is only executed if Ã¬f and while return true. Events Name Description action-performed dispatched after execution of an action while-performed dispatched after execution of a while loop Examples Actions the \u0026lsquo;delay\u0026rsquo; attribute Events Custom Events Submission Demo Submission Chaining "},{"uri":"https://jinntec.github.io/fore-docs/getstarted/","title":"Get Started","tags":["getstarted"],"description":"","content":"This tutorial will walk you through the first steps of using Fore and introduce some of the elements.\nFor further study it is highly recommended to use the huge list of demos that come with Fore. These showcase all features and how to use them in concrete working examples.\nUsing Fore To use Fore you have to add one CSS stylesheet and the Fore module to your page.\nLoading from CDN Add these tags to the head of your HTML file.\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/@jinntec/fore@latest/resources/fore.css\u0026#34;\u0026gt; \u0026lt;script type=\u0026#34;module\u0026#34; src=\u0026#34;https://cdn.jsdelivr.net/npm/@jinntec/fore@latest/dist/fore.js\u0026#34;\u0026gt; You are good to go and may skip to next section!\nUsing local copy Download Fore from https://github.com/Jinntec/Fore/releases and unpack it to a convenient location on your disk.\nSetup a basic HTML page like this:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;/\u0026gt; \u0026lt;meta content=\u0026#34;width=device-width, minimum-scale=1, initial-scale=1, user-scalable=yes\u0026#34; name=\u0026#34;viewport\u0026#34;/\u0026gt; \u0026lt;title\u0026gt;template\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#34;[path-to-fore]/fore.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script type=\u0026#34;module\u0026#34; src=\u0026#34;[path-to-fore]/fore.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026lsquo;[path-to-fore]\u0026rsquo; has to be the relative path to the Fore location on your disk.\nUsing the dev version During development it can be helpful to get console messages that give some feedback about what is happening behind the scenes.\nWith dev version of Fore there\u0026rsquo;s logging of:\nloading of instances creation of dependency graph recalculation and revalidation of ModelItems refreshing the UI firing of events and action execution submissions To get those message on developers tools console just use:\n\u0026lt;script type=\u0026#34;module\u0026#34; src=\u0026#34;[path-to-fore]/fore-dev.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; Once in production you can simply switch back. There\u0026rsquo;s no difference between these versions beyond logging.\n"},{"uri":"https://jinntec.github.io/fore-docs/getstarted/mvc/","title":"The anatomy of Fore","tags":["basic","mvc","model","ui","actions"],"description":"","content":"Before stepping deeper a basic understanding of the main parts of Fore is helpful.\nFore uses a classical Model-View-Controller (MVC) architecture.\nThere are 3 basic things to remember:\nThe model (\u0026lt;fx-model\u0026gt;) holds the data and their state. This state will be used during refresh to apply changes to the UI.\nWhen the user interacts with a page the UI will trigger Actions to change the data in the model.\nActions will do the actual mutation of the data like setting a value, replacing, inserting or deleting a data node. But not all actions mutate the model - there are also actions for messaging the user, showing a dialog or switching a view.\nThe term \u0026lsquo;data node\u0026rsquo; does not mean it needs to be a DOM node. It can also point to a JSON property or some other data item.\n"},{"uri":"https://jinntec.github.io/fore-docs/elements/","title":"Element Reference","tags":[],"description":"","content":"Fore Elements This chapter contains the detailed documentation of all Fore elements.\n"},{"uri":"https://jinntec.github.io/fore-docs/getstarted/hello/","title":"Hello World","tags":["basic","model","instance"],"description":"","content":"What can be learned here:\nthe basic structure of Fore \u0026lt;fx-model\u0026gt; and \u0026lt;fx-instance\u0026gt; elements using a Template Expression Hello World - Step by Step Each \u0026lt;fx-fore\u0026gt; element has a single model.\n1. Add the model First step to create a data-bound \u0026lsquo;Hello World\u0026rsquo; example is to add a model.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model\u0026gt;\u0026lt;/fx-model\u0026gt; \u0026lt;/fx-fore\u0026gt; The \u0026lt;fx-model\u0026gt; is a direct child of the \u0026lt;fx-fore\u0026gt; element.\n2. Add some data Not very existing so far so add some data:\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;greeting\u0026gt;hello world!\u0026lt;/greeting\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;/fx-fore\u0026gt; Data are kept in instances. A model can have as many instances as needed.\nCurrently Fore supports XML and JSON as data formats. However other formats like e.g. CSV can be added.\n3. Add some UI The final step is to add some UI to bind to our data.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;greeting\u0026gt;hello world!\u0026lt;/greeting\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;h1\u0026gt;My first Fore page\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{greeting}\u0026lt;/h2\u0026gt; \u0026lt;/fx-fore\u0026gt; Here we use a simple Template Expression to output the data of the node \u0026lsquo;greeting\u0026rsquo;. In a later step we\u0026rsquo;ll use controls to edit the data.\nA Template Expression is enclosed in curly brackets and binds to some data node in an instance. You can put them everywhere within the UI of a \u0026lt;fx-fore\u0026gt; element either within text nodes or attributes nodes.\nLive Result: The blueish shaded area below shows Fore running inside of this page. We use live example throughout this documentation.\nhello world! My first Fore page {greeting} {greeting} "},{"uri":"https://jinntec.github.io/fore-docs/getstarted/todo/","title":"todo","tags":["basic","repeat","actions","controls"],"description":"","content":"What can be learned here:\nthe use of \u0026lt;fx-repeat\u0026gt; element data binding and resolution using a constraint using controls using insert and delete action Todo Application Let\u0026rsquo;s go for a bit more fancy example and learn about some new elements.\nIn this tutorial we add some real interaction, give some feedback messages to the user and actually change our data.\nIt will introduce you to \u0026lt;fx-repeat\u0026gt; element that is one of the container elements available in Fore.\nSetting up the model For our todo app we\u0026rsquo;d like to have a list of todos along with a completion and a due date.\nOur data model for a single todo looks like this:\n\u0026lt;task complete=\u0026#34;\u0026#34; due=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/task\u0026gt; Lets put that into Fore and add some dummy data to play with.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;/fx-fore\u0026gt; Introducing \u0026lt;fx-repeat\u0026gt; For displaying a list of todos we\u0026rsquo;ll use the \u0026lt;fx-repeat\u0026gt; element which will show all todos in a list.\nWe add the repeat alongside the model in our markup.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;h1\u0026gt;My Todos\u0026lt;/h1\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt;{.}\u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt; Data Binding - the ref Attribute The ref attribute is used throughout Fore on many elements. It uses binding expressions to link to some data node.\nIn our case the binding expression is simply \u0026rsquo;task\u0026rsquo; and will point to task elements in our data.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;h1\u0026gt;My Todos\u0026lt;/h1\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt;{.}\u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt; Result so far\nMake tutorial part 1 Pick up Milk My Todos {.} A repeat always has a \u0026lt;template\u0026gt; child which is the blueprint for rendering one bound item.\nIt just contains a div and the Template Expression of \u0026lsquo;{.}\u0026rsquo;.\n\u0026quot;.\u0026quot; means the current node which is the bound task node.\nThis is known as \u0026lsquo;scoped resolution\u0026rsquo; and means that binding expressions are always evaluated relatively to their parent binding expression (aka ref attributes).\nAdding controls In this step we add some controls to the repeat template.\nFore uses a generic \u0026lt;fx-control\u0026gt; element to bind a concrete widget (like a native \u0026lt;input\u0026gt;) to the model.\nThis has the advantage that there\u0026rsquo;s no need for a big list of different controls to be supported but instead just use existing ones.\nIn this example simple native browser input controls are used.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;h1\u0026gt;My Todos\u0026lt;/h1\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;fx-control ref=\u0026#34;@complete\u0026#34; value-prop=\u0026#34;checked\u0026#34; update-event=\u0026#34;input\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;checkbox\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-control class=\u0026#34;{@complete}\u0026#34; id=\u0026#34;task\u0026#34; ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-control\u0026gt; \u0026lt;fx-control ref=\u0026#34;@due\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;date\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-trigger class=\u0026#34;btn delete\u0026#34;\u0026gt; \u0026lt;button\u0026gt;x\u0026lt;/button\u0026gt; \u0026lt;fx-delete ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-delete\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt; Note the second \u0026lt;fx-control\u0026gt; which is empty. If no control is given as child it will default to a \u0026lt;input type=\u0026quot;text\u0026quot;\u0026gt; control which is auto-created to save some typing.\nHere 3 \u0026lt;fx-control\u0026gt;s and 2 \u0026lt;fx-trigger\u0026gt; elements have been added.\nThe controls bind to the respective nodes in the data and use:\na checkbox for \u0026lsquo;@complete\u0026rsquo; a text field for task text a date input for \u0026lsquo;@due\u0026rsquo; date The \u0026lsquo;@\u0026rsquo; character addresses an attribute of an XML node. Scoped resolution will result in the binding expression \u0026rsquo;task[1]/@complete\u0026rsquo; for the first todo.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;h1\u0026gt;My Todos \u0026lt;fx-trigger class=\u0026#34;btn add\u0026#34;\u0026gt; \u0026lt;button\u0026gt;add\u0026lt;/button\u0026gt; \u0026lt;fx-insert ref=\u0026#34;task\u0026#34; at=\u0026#34;1\u0026#34; position=\u0026#34;before\u0026#34;\u0026gt;\u0026lt;/fx-insert\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;/h1\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;fx-control ref=\u0026#34;@complete\u0026#34; value-prop=\u0026#34;checked\u0026#34; update-event=\u0026#34;input\u0026#34;\u0026gt; \u0026lt;input class=\u0026#34;widget\u0026#34; type=\u0026#34;checkbox\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-control class=\u0026#34;{@complete}\u0026#34; id=\u0026#34;task\u0026#34; ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-control\u0026gt; \u0026lt;fx-control ref=\u0026#34;@due\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;date\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-trigger class=\u0026#34;btn delete\u0026#34;\u0026gt; \u0026lt;button\u0026gt;delete\u0026lt;/button\u0026gt; \u0026lt;fx-delete ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-delete\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt; The first \u0026lt;fx-trigger\u0026gt; is contained within the \u0026lt;h1\u0026gt; and inserts a new todo at the top of the list.\nThe \u0026lt;fx-trigger\u0026gt; within the repeat will display a button and allow to delete a todo from the list with the \u0026lt;fx-delete\u0026gt; action.\nThe todo list with add and delete Make tutorial part 1 Pick up Milk My Todos add delete This is the barebones of the todo app. Next chapter will introduce some refinements.\n"},{"uri":"https://jinntec.github.io/fore-docs/getstarted/todo-refined/","title":"todo refined","tags":["basic","repeat","actions","controls"],"description":"","content":"What can be learned here:\nadding a counter insert from a template node use \u0026lt;fx-bind\u0026gt; to require an value Todo refined In last chapter the bare minimum for the todo app were created.\nIn this chapter we\u0026rsquo;d like to make some improvements:\nshow a counter for our todos hide or show completed todos make sure we can handle an empty list Extending our data model Let\u0026rsquo;s add a couple of nodes to our data model to cover our objectives. We\u0026rsquo;ll use them later on.\n\u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;template\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;\u0026#34;\u0026gt;new task\u0026lt;/task\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;showclosed\u0026gt;false\u0026lt;/showclosed\u0026gt; \u0026lt;/data\u0026gt; Adding a counter We add a counter simply above our repeat.\n\u0026lt;div class=\u0026#34;info\u0026#34;\u0026gt; You have {count(task[@complete=\u0026#39;false\u0026#39;])} open tasks \u0026lt;/div\u0026gt; The Template Expression will output the number of open task nodes in the data.\ncount() is an built-in XPath 3.1 function we\u0026rsquo;re using to get the number of todos. XPath offers a big library of functions.\nMake tutorial part 1 Pick up Milk new task false Todo add You have {count(instance()/task[@complete='false'])} open tasks delete Of course you can add further counters for closed and all tasks. I\u0026rsquo;ll leave that as an excercise.\nFixing our repeat If you\u0026rsquo;ve played with the last example and have deleted all todos and trying to re-add one you have run into problems. It simply refuses to create a new repeat entry.\nThis is due to the default behavior of \u0026lt;fx-insert\u0026gt;. It tries to use the last item in the list as a template for insertion. If there\u0026rsquo;s none left, the nodeset is empty and the \u0026lt;fx-insert\u0026gt; will do nothing.\nThe origin attribute handles this situation and allows us to bind to a template node to use for the insert.\nBy changing the trigger from\n\u0026lt;fx-trigger class=\u0026#34;btn add\u0026#34;\u0026gt; \u0026lt;button\u0026gt;add\u0026lt;/button\u0026gt; \u0026lt;fx-insert ref=\u0026#34;task\u0026#34; at=\u0026#34;1\u0026#34; position=\u0026#34;before\u0026#34;\u0026gt;\u0026lt;/fx-insert\u0026gt; \u0026lt;/fx-trigger\u0026gt; into\n\u0026lt;fx-trigger class=\u0026#34;btn add\u0026#34;\u0026gt; \u0026lt;button\u0026gt;+\u0026lt;/button\u0026gt; \u0026lt;fx-insert ref=\u0026#34;task\u0026#34; at=\u0026#34;1\u0026#34; position=\u0026#34;before\u0026#34; origin=\u0026#34;template/task\u0026#34;\u0026gt;\u0026lt;/fx-insert\u0026gt; \u0026lt;/fx-trigger\u0026gt; Now the insert will evaluate the origin attribute and take that node to insert into the list.\nBy using this technique you can also apply some defaults for new entries e.g. a todo will now be complete=\u0026quot;false\u0026quot; and \u0026rsquo;new task\u0026rsquo; as task by default.\nMake tutorial part 1 Pick up Milk new task false Todo add You have {count(instance()/task[@complete='false'])} open tasks delete Adding constraints Certainly at some point you\u0026rsquo;d like to save your todo list and it makes not much sense to have a todo without a text.\nLet\u0026rsquo;s create a constraint for that by introducing a bind element:\n\u0026lt;fx-bind ref=\u0026#34;task\u0026#34; constraint=\u0026#34;string-length(.) \u0026gt; 0\u0026#34; alert=\u0026#34;what\u0026#39;s your todo?\u0026#34;\u0026gt;\u0026lt;/fx-bind\u0026gt; The constraint attribute takes an boolean XPath expression which will automatically be applied by the model and re-evaluated whenever this is required e.g. when data are submitted.\nFore uses XPath to bind nodes or make calculations. To learn more about XPath and play with it, have a look at fontoXPath playground\nA bind applies a constraint on a bind node or applies a calculation to it. It may also have an alert message when a constraint fails.\nAdd the bind to the model somewhere.\nTip: though not strictly necessary it makes sense to group your \u0026lt;fx-instance\u0026gt;, \u0026lt;fx-bind\u0026gt;,\u0026lt;fx-submission\u0026gt; and \u0026lt;fx-function\u0026gt; elements for a better overview when things get more complex.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;template\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;\u0026#34;\u0026gt;new task\u0026lt;/task\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;count\u0026gt;1\u0026lt;/count\u0026gt; \u0026lt;showclosed\u0026gt;false\u0026lt;/showclosed\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;fx-bind ref=\u0026#34;task\u0026#34; required=\u0026#34;true()\u0026#34;\u0026gt;\u0026lt;/fx-bind\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;h1\u0026gt;Todo\u0026lt;/h1\u0026gt; \u0026lt;fx-trigger class=\u0026#34;btn add\u0026#34;\u0026gt; \u0026lt;button\u0026gt;+\u0026lt;/button\u0026gt; \u0026lt;fx-insert ref=\u0026#34;task\u0026#34; at=\u0026#34;1\u0026#34; position=\u0026#34;before\u0026#34; origin=\u0026#34;template/task\u0026#34;\u0026gt;\u0026lt;/fx-insert\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;div class=\u0026#34;info\u0026#34;\u0026gt; You have {count(instance()/task[@complete=\u0026#39;true\u0026#39;])} completed tasks \u0026lt;/div\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;fx-control ref=\u0026#34;@complete\u0026#34; value-prop=\u0026#34;checked\u0026#34; update-event=\u0026#34;input\u0026#34;\u0026gt; \u0026lt;input class=\u0026#34;widget\u0026#34; type=\u0026#34;checkbox\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-control class=\u0026#34;{@complete}\u0026#34; id=\u0026#34;task\u0026#34; ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-control\u0026gt; \u0026lt;fx-control ref=\u0026#34;@due\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;date\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-trigger class=\u0026#34;btn delete\u0026#34;\u0026gt; \u0026lt;button\u0026gt;delete\u0026lt;/button\u0026gt; \u0026lt;fx-delete ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-delete\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt; Result Empty a task field to trigger the alert - once you leave the field the alert is shown.\nMake tutorial part 1 Pick up Milk new task 1 false Todo add You have {count(instance()/task[@complete='true'])} completed tasks delete Now you can delete all entries and create new ones afterwards.\n"},{"uri":"https://jinntec.github.io/fore-docs/elements/model/","title":"Model","tags":["elements","model"],"description":"","content":"Model Elements This chapter describes all elements belonging to the Fore Model.\nModel elements have no visual representation and are always hidden from view.\n"},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/","title":"UI Elements","tags":["elements","UI"],"description":"","content":"This chapter describes all user interface elements. "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/append/","title":"&lt;fx-append&gt;","tags":["elements actions"],"description":"","content":"Description Appends an entry to an fx-repeat.\nNote: this is deprecated. Please use fx-insert.\nAttributes Name Description ref the XPath ref to append to repeat the fx-repeat to append to Events Name Description index-changed dispatched after entry has been added to a repeat Examples todo nested todo TEI header editor sample "},{"uri":"https://jinntec.github.io/fore-docs/getstarted/submission/","title":"Submissions","tags":["getstarted","submission"],"description":"","content":"What can be learned here:\ndefining a basic \u0026lt;fx-submission\u0026gt; triggering a submission by using \u0026lt;fx-send\u0026gt; action replacing data with submission sending a message to the user with \u0026lt;fx-message\u0026gt; action Ok, nice - we have a todo list that will be gone when we reload the browser of leave the page.\nMake tutorial part 1 Pick up Milk new task Todo add You have {count(instance()/task[@complete='true'])} completed tasks delete Adding a submission We need a way to store our data. Let\u0026rsquo;s add a submission which will go into our model\n\u0026lt;fx-submission id=\u0026#34;save\u0026#34; method=\u0026#34;post\u0026#34; url=\u0026#34;#echo\u0026#34; replace=\u0026#34;instance\u0026#34; instance=\u0026#34;todo-list\u0026#34;\u0026gt; \u0026lt;/fx-submission\u0026gt; Due to technical limitations on this static site we use the builtin \u0026lsquo;#echo\u0026rsquo; target for this tutorial that will just return the data it gets in and replaces another instance with it. This is to simulate what is usually happening when sending data via http.\nWhat does this do?\nWe need to add an id to identify a submission This submission will send a POST request of the instance data to the URL \u0026lsquo;#echo\u0026rsquo; The response will replace the instance. The instance to be replaced is \u0026rsquo;todo-list' Triggering the save submission To trigger a save operation you usually want a button.\n... UI ... \u0026lt;fx-trigger\u0026gt; \u0026lt;button\u0026gt;Save\u0026lt;/button\u0026gt; \u0026lt;fx-send submission=\u0026#34;save\u0026#34;\u0026gt;\u0026lt;/fx-send\u0026gt; \u0026lt;/fx-trigger\u0026gt; Put together\nMake tutorial part 1 Pick up Milk new task 1 false your todo list has been saved Todo add You have {count(instance()/task[@complete='true'])} completed tasks delete Save Watch the \u0026lsquo;Data Inspector\u0026rsquo; on the right. Intially there will be 2 data instances listed by their id. Data Inspector is a tool that helps during development to see the live content of your data instances. The instance live separate from the DOM and therefore cannot be seen in their actual state by inspecting with developer tools. You can just add it within any \u0026lt;fx-fore\u0026gt; element.\nAfter hitting the \u0026lsquo;Save\u0026rsquo; button the instance \u0026rsquo;todo-list\u0026rsquo; will be identical to the \u0026lsquo;default\u0026rsquo; instance.\nThis means that our submission has been executed and has send its data to the \u0026lsquo;#echo\u0026rsquo; submission, that gets back the same data and replaced the \u0026lsquo;saved-list\u0026rsquo; instance.\nMesssaging the user You may have noticed a message in the lower left after hitting \u0026lsquo;save\u0026rsquo;.\nLet\u0026rsquo;s add the missing line i omitted from above code.\n\u0026lt;fx-submission id=\u0026#34;save\u0026#34; method=\u0026#34;post\u0026#34; url=\u0026#34;#echo\u0026#34; replace=\u0026#34;instance\u0026#34; instance=\u0026#34;saved-list\u0026#34;\u0026gt; \u0026lt;fx-message event=\u0026#34;submit-done\u0026#34;\u0026gt;your todo list has been saved\u0026lt;/fx-message\u0026gt; \u0026lt;/fx-submission\u0026gt; This adds a \u0026lt;fx-message\u0026gt; element to the submission that will react to the \u0026lsquo;submit-done\u0026rsquo; event that is fired when a submission successfully returned.\nThe message element defaults to a toast message that disappears after a delay.\nWith the event attribute the message action attaches to its parent element and reacts to \u0026lsquo;submit-done\u0026rsquo; in this case.\nThis technique is used all over Fore to attach event handlers that in turn will run an action.\n"},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/confirm/","title":"&lt;fx-confirm&gt;","tags":["elements actions"],"description":"","content":"Description Displays simple confirmation dialog. Action will only execute if confirmation returns true.\nAttributes Name Description message Message to display for confirmation. Action Attributes Name Description delay delay before action is executed in milliseconds. event the event name this action is listening to if boolean XPath expression. Action is only executed if this returns true. target id reference to element this action attaches to while boolean XPath expression. Action is only executed if Ã¬f and while return true. Events none\nExamples Project Task planner "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/delete/","title":"&lt;fx-delete&gt;","tags":["elements actions"],"description":"","content":"Description Deletes a node from a nodeset.\nAction Attributes Name Description delay delay before action is executed in milliseconds. event the event name this action is listening to if boolean XPath expression. Action is only executed if this returns true. target id reference to element this action attaches to while boolean XPath expression. Action is only executed if Ã¬f and while return true. fx-delete Attributes Name Description ref XPath reference to instance node(s) to delete Examples todo nested todo TEI header editor sample "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/dispatch/","title":"&lt;fx-dispatch&gt;","tags":["elements actions"],"description":"","content":"Description Action to dispatch an event with optional parameters to specific targets.\nTo specify event properties the fx-property element is used.\nfx-dispatch will use id resolution within fx-repeat elements to resolve the id in scope of current occurence.\nAttributes Name Description name name of event to dispatch targetid id reference of element to dispatch to Inherited Action Attributes Name Description delay delay before action is executed in milliseconds. event the event name this action is listening to if boolean XPath expression. Action is only executed if this returns true. target id reference to element this action attaches to while boolean XPath expression. Action is only executed if Ã¬f and while return true. Events none\nExamples dispatch with properties fx-dispatch action "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/hide/","title":"&lt;fx-hide&gt;","tags":["elements actions"],"description":"","content":"Description Action to hide a fx-dialog.\nAttributes Name Description dialog idref of an fx-dialog element. Examples fx-dialog "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/insert/","title":"&lt;fx-insert&gt;","tags":["elements actions"],"description":"","content":"Description Action to insert node(s) into instance data.\nGeneral Binding Attributes Name Description ref XPath pointing to node(s) the bind is attaching to Attributes Name Description Default at index position in nodeset where to insert new node(s) 0 position with regard to \u0026lsquo;at\u0026rsquo; can be either \u0026lsquo;before\u0026rsquo; or \u0026lsquo;after\u0026rsquo; after origin XPath pointing to nodes to be inserted into referenced nodeset keepValues marker attribute. When present will keep text-values of origin nodes Events Name Description insert dispatched when nodes have been inserted detail[insertedNodes] - the inserted nodes detail[position] - the position of the insert in the nodeset Examples Insert into inhomogenious nodeset insert action insert action 2 TEI header editor sample todo the while attribute "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/message/","title":"&lt;fx-message&gt;","tags":["elements actions","message"],"description":"","content":"Description Display a message to the user.\nAttributes Name Description default level \u0026lsquo;modal\u0026rsquo;, \u0026lsquo;modeless\u0026rsquo; or \u0026rsquo;ephemeral\u0026rsquo; ephemeral \u0026lsquo;modal\u0026rsquo; - modal dialog window \u0026lsquo;sticky\u0026rsquo; - sticky popup message \u0026rsquo;ephemeral\u0026rsquo; - auto-closing popup message default value XPath expression which resolves to message Action Attributes Name Description delay delay before action is executed in milliseconds. event the event name this action is listening to if boolean XPath expression. Action is only executed if this returns true. target id reference to element this action attaches to while boolean XPath expression. Action is only executed if Ã¬f and while return true. Events none\nExamples fx-message actions Binding the delay attribute fx-control Hello World the if attribute instances lazy modelItem creation during UI init the while attribute "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/refresh/","title":"&lt;fx-refresh&gt;","tags":["elements actions","refresh"],"description":"","content":"Description Triggers immediate refresh.\nAttributes Name Description control id of an control to be refreshed explicitly force marker attribute to force a full refresh - overrules control self searches upwards for fx-control and refreshes it Action Attributes Name Description delay delay before action is executed in milliseconds. event the event name this action is listening to if boolean XPath expression. Action is only executed if this returns true. target id reference to element this action attaches to while boolean XPath expression. Action is only executed if Ã¬f and while return true. Events none\nExamples the delay attribute Randomizer the while attribute "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/replace/","title":"&lt;fx-replace&gt;","tags":["elements actions"],"description":"","content":"Description Replaces a node with another.\nAttributes Name Description ref XPath reference pointing to the bound node with XPath expression to point to a node for replacement Action Attributes see Action\nExamples Replace Action "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/send/","title":"&lt;fx-send&gt;","tags":["elements actions"],"description":"","content":"Description Triggers a submission. Submission with given id must exist otherwise error is thrown.\nAttributes Name Description submission required idref to fx-submission element. Also supports \u0026lsquo;#reload\u0026rsquo; which just reloads the window. Events none\nExamples auth Submission Relevance Processing Submission serialization Submission Demo Submission Demo 2 Submission serialization Submission Chaining submit with ref "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/setfocus/","title":"&lt;fx-setfocus&gt;","tags":["elements actions"],"description":"","content":"Description Sets the focus to a control with given id. If the id is within an repeat it will look for the active repeatitem and search that for the control.\nSince: Version 2.0.0\nAttributes Name Description control idref that a control Action Attributes Name Description delay delay before action is executed in milliseconds. event the event name this action is listening to if boolean XPath expression. Action is only executed if this returns true. target id reference to element this action attaches to while boolean XPath expression. Action is only executed if Ã¬f and while return true. Events none\nExamples todo "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/setvalue/","title":"&lt;fx-setvalue&gt;","tags":["elements actions"],"description":"","content":"Description Sets a value to a bound node.\nAttributes Name Description ref XPath reference pointing to the bound node value XPath expression to be set as value Action Attributes Name Description delay delay before action is executed in milliseconds. event the event name this action is listening to if boolean XPath expression. Action is only executed if this returns true. target id reference to element this action attaches to while boolean XPath expression. Action is only executed if Ã¬f and while return true. Events none\nExamples Action auth binding the delay attribute events events 2 hello "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/show/","title":"&lt;fx-show&gt;","tags":["elements actions"],"description":"","content":"Description Action to display a fx-dialog.\nAttributes Name Description dialog idref of an fx-dialog element. Events none\nExamples fx-dialog "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/toggle/","title":"&lt;fx-toggle&gt;","tags":["elements actions"],"description":"","content":"Description Action to toggle a fx-switch element.\nAttributes Name Description case id of fx-case element to show Events none\nExamples auth repeat in switch Simple TEI Header switch "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/","title":"Actions","tags":["elements actions"],"description":"","content":"Action Elements This chapter describes all Action elements.\n"},{"uri":"https://jinntec.github.io/fore-docs/links/","title":"Links","tags":[],"description":"","content":"Fore Fore at github Fore at npmjs.com Twitter Discussions Issues Standards A beautiful XPath 3 reference XForms 2.0 - source of inspiration HTML Custom Elements Spec. Web Components at mdn "},{"uri":"https://jinntec.github.io/fore-docs/tags/elements-actions/","title":"elements actions","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/functions/","title":"functions","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/functions/","title":"Functions","tags":["Version 1.0.0","functions"],"description":"","content":"Functions This chapter describes the builtin functions of Fore. As Fore uses XPath 3.1 as its expression language you also have access to a large library of functions that are defined by the standard.\nNot 100% of the XPath 3.1 functions are available in fontoXPath. In doubt please refer to their github page.\n"},{"uri":"https://jinntec.github.io/fore-docs/tags/version-1.0.0/","title":"Version 1.0.0","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/actions/","title":"actions","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/basic/","title":"basic","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/controls/","title":"controls","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fore/","title":"fore","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-fore/","title":"fx-fore","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-model/","title":"fx-model","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/instance/","title":"instance","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/model/","title":"model","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/mvc/","title":"MVC","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/repeat/","title":"repeat","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/ui/","title":"UI","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/alert/","title":"&lt;fx-alert&gt;","tags":["elements","ui","fx-alert","validation"],"description":"","content":"Description fx-alert element is used for messaging validation errors and may be used within fx-bind element or as a child of a UI control like fx-control.\nAttributes No Attributes\nEvents none\nExamples Binding Revalidation "},{"uri":"https://jinntec.github.io/fore-docs/elements/model/bind/","title":"&lt;fx-bind&gt;","tags":["elements","model","fx-bind"],"description":"","content":"Description fx-bind element attaches constraints and calculations to instance nodes.\nAttributes Name Description Default ref XPath pointing to node(s) the bind is attaching to - calculate XPath expression to be calculated. Result will become value of node(s) referenced by ref - constraint boolean XPath expression to determine validity of node(s) true readonly boolean XPath expression to determine readonly/readwrite state false relevant boolean XPath expression to determine relevant/non-relevant state true required boolean XPath expression to determine required/optional state false type datatype - reserved for future versions string Events none\nExamples nested Binding Binding Hello Simple Calculate todo Recalculate Revalidation Submission Relevance Processing "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/case/","title":"&lt;fx-case&gt;","tags":["elements","ui","fx-case","fx-switch"],"description":"","content":"Description Defines one \u0026lsquo;page\u0026rsquo; of a fx-switch element.\nAttributes Name Description label optional label name a unique name to be used with fx-toggle Events none\nExamples Repeat in Switch TEI header editor sample Switch "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/container/","title":"&lt;fx-container&gt;","tags":["elements","ui"],"description":"","content":"\u0026lt;fx-container\u0026gt; is an abstract class used for container controls like \u0026lt;fx-group\u0026gt; and \u0026lt;fx-switch\u0026gt;.\n"},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/control/","title":"&lt;fx-control&gt;","tags":["elements","ui","fx-control"],"description":"","content":"Description fx-control is no concrete control displayed in the browser but instead wraps such a control and binds it to a data node in the model with the help of a ref attribute.\nAttributes Name Description Default context XPath reference pointing to parent context incopeContext debounce optional numeric value in milliseconds to delay input events - label optional label - ref XPath reference pointing to the bound node - update-event optional event name when to trigger updating of bound node. blur \u0026rsquo;enter\u0026rsquo; can be used to catch enter key value-prop optional property name used to set the value of the widget (default:\u0026lsquo;value\u0026rsquo;) value Attributes on widgets A widget is an element contained within a \u0026lt;fx-control\u0026gt; and must be marked with a class=\u0026quot;widget\u0026quot;.\nSome attributes might occur on a widget to further control its behavior.\nName Description selection applies to \u0026lt;select\u0026gt; elements. If selection=\u0026quot;open\u0026quot; is given an additional empty \u0026lt;option\u0026gt; will be added to allow the empty value. Events Name Description value-changed dispatched during refresh after the value of the control has changed optional dispatched during refresh when node has become optional required dispatched during refresh when node has become required readonly dispatched during refresh when node has become readonly readwrite dispatched during refresh when node has become readwrite valid dispatched during refresh when node has become valid invalid dispatched during refresh when node has become invalid relevant dispatched during refresh when node has become relevant nonrelevant dispatched during refresh when node has become non-relevant Special features passing referenced node as node instead of value With the Â´asÂ´ attribute the referenced node will be directly passed to the widget. This can be useful with control that manipulate nodes like e.g. text editors.\ncreating selects with an empty option Sometimes values can and should be empty initially. With selection=\u0026quot;open\u0026quot; on the select element it will create such en empty option.\nExamples the fx-control element Actions Fore API Demo Template Expressions Country selector Selects Trigger "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/dialog/","title":"&lt;fx-dialog&gt;","tags":["elements","ui","fx-dialog"],"description":"","content":"Description Simple modal dialog with arbitrary content.\nTo be used with fx-show and fx-hide actions.\nAttributes Name Description id required to be used by fx-show' and fx-hide`actions Events none\nExamples fx-dialog "},{"uri":"https://jinntec.github.io/fore-docs/elements/model/functions/","title":"&lt;fx-function&gt;","tags":["elements","model","fx-function"],"description":"","content":"Description Allows to define custom inline function in either XPath/XQuery or Javascript.\nAttributes Name Description signature the function signature. Must use \u0026rsquo;local\u0026rsquo; prefix type can be \u0026rsquo;text/xpath\u0026rsquo; or \u0026rsquo;text/javascript' Events none\nExamples Custom inline functions Randomizer "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/hint/","title":"&lt;fx-hint&gt;","tags":["elements","ui","fx-hint"],"description":"","content":" "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/inspector/","title":"&lt;fx-inspector&gt;","tags":["elements","ui","fx-inspector","inspector"],"description":"","content":"Description Instance Inspector is a helper element for development which displays all used instances at the bottom of the viewport.\nIt uses the log() function under the hood and renders a html details element for each instance.\nAttributes Name Description default open wether or not to be open by default false Events none\nExamples Simple TEI Header editor "},{"uri":"https://jinntec.github.io/fore-docs/elements/model/instance/","title":"&lt;fx-instance&gt;","tags":["elements","model","fx-instance"],"description":"","content":"Description Holds the data of the model. A fx-model may have as many fx-instance elements as necessary.\nAttributes Name Description default id id of the instance for addressing in refs default src url to load instance from via http get type \u0026lsquo;xml\u0026rsquo; or \u0026lsquo;json\u0026rsquo; or \u0026lsquo;html\u0026rsquo; are supported by now xml xpath-default-namespace namespace to be used with unprefixed XPathes emtpy Examples Instances Instance super powers the fx-output element "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/items/","title":"&lt;fx-items&gt;","tags":["elements","ui","fx-items"],"description":"","content":"Description Helper element to build a list of items by repeating given template for each node in the bound nodeset.\nAttributes Name Description ref XPath reference pointing to nodeset to be repeated Events none\nExamples Select Multiple "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/output/","title":"&lt;fx-output&gt;","tags":["elements","ui","fx-output"],"description":"","content":"Description Outputs bound or calculated values.\nAlso supports mimtypes \u0026lsquo;html\u0026rsquo; and \u0026lsquo;markdown\u0026rsquo; to render bound nodes accordingly.\nEvents none\nAttributes Name Description Default ref XPath reference pointing to the bound node - value XPath expression calculating a string value mediatype either \u0026lsquo;html\u0026rsquo; or \u0026lsquo;markdown\u0026rsquo; are accepted by now. Examples The fx-output Element Get started Instances Instance super powers Binding fx-control "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/repeat/","title":"&lt;fx-repeat&gt;","tags":["elements","ui","fx-repeat","repeat"],"description":"","content":"Description Repeats template for each node of the referenced nodeset.\nFor each data node in the referenced nodeset one \u0026lt;fx-repeatitem\u0026gt; element will be created that will contain the evaluated template as content.\nAttributes Name Description id identifier for repeat ref XPath reference pointing to the bound node Events Name Description Details path-mutated dispatched when repeat nodeset changes \u0026lsquo;path\u0026rsquo; - the mutation path \u0026lsquo;index\u0026rsquo; - the index of the changed repeat item. refresh-done dispatched after a refresh() run - ready dispatched after Fore has fully been initialized - error dispatches error when template expression fails to evaluate \u0026lsquo;message\u0026rsquo; - the error message Examples API Demo docbook Bibliography insert todo Project Task planner Atomic repeat repeat in switch repeat sequence the while attribute "},{"uri":"https://jinntec.github.io/fore-docs/elements/model/submission/","title":"&lt;fx-submission&gt;","tags":["elements","model","fx-submission"],"description":"","content":"Description Send and receive data.\nAttributes Name Description Default id id of submission for referral ref XPath reference pointing to the bound node instance id of instance when replace='instance' into XPath expr where to insert response nodes into method http methods GET, POST, PUT, DELETE, url-encoded-post GET nonrelevant handling of non relevant nodes during serialization. Can be one of \u0026lsquo;keep\u0026rsquo;, \u0026rsquo;empty\u0026rsquo; or \u0026lsquo;remove\u0026rsquo; remove replace one of \u0026lsquo;all\u0026rsquo;, \u0026lsquo;instance\u0026rsquo;, \u0026rsquo;target\u0026rsquo;, \u0026lsquo;redirect\u0026rsquo; or \u0026rsquo;none\u0026rsquo; all \u0026lsquo;all\u0026rsquo; - response replaces the viewport \u0026lsquo;instance\u0026rsquo; - response replaces the instance given by the instance attribute or if not present the default instance \u0026rsquo;target\u0026rsquo; - response will be attached to element identified by target \u0026lsquo;redirect\u0026rsquo; - use response as redirect url. \u0026rsquo;none\u0026rsquo; - response will be ignored. serialization \u0026rsquo;none\u0026rsquo; or \u0026lsquo;xml\u0026rsquo; at this point xml targetref XPath pointing to target node when `replace=\u0026ldquo;instance\u0026rdquo; Events Name Description submit dispatch before submission takes place submit-error dispatched if the request returned an error submit-done dispatched when submission was successfully completed Examples auth submission relevance submission serialization submission serialization submission demo submission demo2 submission chaining submission chaining submission with targetref "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/switch/","title":"&lt;fx-switch&gt;","tags":["elements","ui"],"description":"","content":"Description Container that has fx-case children of which only one is shown at a given time.\nCan be unbound and toggled via an action or bound and react to data value.\nAttributes No Attributes\nEvents none\nExamples auth repeat in switch Simple TEI Header switch "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/trigger/","title":"&lt;fx-trigger&gt;","tags":["elements","ui","trigger"],"description":"","content":"Description Generic container for action buttons, links etc. which can execute an action when activated.\n\u0026lt;fx-trigger\u0026gt; can also be bound and therefore become readonly or non-relevant.\nAttributes Name Description Default ref XPath reference pointing to the bound node - Examples trigger actions binding delay delay dispatch \u0026hellip; "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/update/","title":"&lt;fx-update&gt;","tags":["elements actions"],"description":"","content":"Description Triggers an explicit update of the model\nAttributes No Attributes\nEvents none\nExamples delay randomizer while "},{"uri":"https://jinntec.github.io/fore-docs/tags/action/","title":"action","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/architecture/","title":"architecture","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/elements/","title":"elements","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-alert/","title":"fx-alert","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-bind/","title":"fx-bind","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-case/","title":"fx-case","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-control/","title":"fx-control","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-dialog/","title":"fx-dialog","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-function/","title":"fx-function","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-hint/","title":"fx-hint","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-inspector/","title":"fx-inspector","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-instance/","title":"fx-instance","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-items/","title":"fx-items","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-output/","title":"fx-output","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-repeat/","title":"fx-repeat","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-submission/","title":"fx-submission","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/fx-switch/","title":"fx-switch","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/getstarted/","title":"getstarted","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/initialization/","title":"initialization","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/architecture/initialization/","title":"Initialization","tags":["architecture","lifecycle","initialization"],"description":"","content":"A defined lifecycle is essential for consistent and efficient processing of state changes during the lifetime of a \u0026lt;fx-fore\u0026gt; element.\nThe diagram below might read a bit complex at first sight but pretty much touches all important areas of Fore and might be a useful read for the interested developer.\nInitialization of Fore sequenceDiagram autonumber participant Fore participant Model participant Instances participant Bindings participant UI Note over Fore: find or generate Model activate Model Fore-\u003e\u003eModel: modelConstruct() loop Model-\u003e\u003eInstances: init() end Instances--\u003e\u003eModel: instance-loaded activate Model Model-\u003e\u003eModel: rebuild() loop Model-\u003e\u003eBindings: init() activate Bindings Bindings-\u003e\u003eModel: ModelItems deactivate Bindings end deactivate Model Model-\u003e\u003eModel: recalculate() Model-\u003e\u003eModel: revalidate() Model--\u003e\u003eFore: modelConstructDone activate Fore Fore-\u003e\u003eFore: initUI() loop Fore-\u003e\u003eUI: refresh() activate UI UI-\u003e\u003eUI: updateState deactivate UI end Fore--\u003e\u003eFore: refresh-done Fore--\u003e\u003eFore: ready deactivate Fore deactivate Model When a \u0026lt;fx-fore\u0026gt; element gets connected, it will wait for all children to be connected and then call modelConstruct() on the \u0026lt;fx-model\u0026gt; element to kick off the initialization process. If no \u0026lt;fx-model\u0026gt; is present one will be created. A model-construct event will be emitted. The model will look for all \u0026lt;fx-instance\u0026gt; elements within its child elements and call init() for each of them. This might involve loading data from an URL. A instance-loaded event will be dispatched for each instance once it\u0026rsquo;s loaded. During rebuild() the model will build its dependency graph by inspecting all \u0026lt;fx-bind\u0026gt; elements within the model. For each data node a ref attribute is pointing to a ModelItem object is created that holds the state of the data node. By inspecting the calculate, constraint, readonly, relevant and required attributes of a Bind the dependencies between data nodes are detected and added to the Main Dependency Graph (MDG). ModelItems will be registered in a map object in the Model. The data node itself will be the key to the ModelItem state object. recalculate() evaluates all calculate attributes in the order given by the MDG. revalidate() evaluates all constraint, readonly, relevant and required attributes to determine the validity of a ModelItem. model-construct-done event is emitted and catched by \u0026lt;fx-fore\u0026gt; element. Fore executes initUI which will find all bound elements within the scope of the \u0026lt;fx-fore\u0026gt; element. Call refresh() for each of them. Synchronize UI element state with ModelItem state by evaluating binding expression, fetching ModelItem object from Model and applying the relevant changes to a control. Fore dispatches a refresh-done event once all UI elements have been refreshed Fore dispatches a \u0026lsquo;ready\u0026rsquo; event "},{"uri":"https://jinntec.github.io/fore-docs/tags/inspector/","title":"inspector","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/lifecycle/","title":"lifecycle","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/message/","title":"message","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/refresh/","title":"refresh","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/submission/","title":"submission","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/trigger/","title":"trigger","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/update/","title":"update","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/architecture/update-cycle/","title":"Update Cycle","tags":["architecture","lifecycle","update"],"description":"","content":"The update cycle is triggered whenever a user interacts with a control e.g. by changing its value.\nLikewise this can be triggered by Actions being triggered by some state event like e.g. value-changed event.\nsequenceDiagram autonumber participant User participant Control participant Action participant Model participant Fore User-\u003e\u003eControl: interact Control-\u003e\u003eAction: execute activate Action Action-\u003e\u003eAction: mutate ModelItem Action-\u003e\u003eModel: add to changed list activate Action Action-\u003e\u003eAction: actionPerformed() Action-\u003e\u003eModel: rebuild() Action-\u003e\u003eModel: recalculate() Action-\u003e\u003eFore: changed[] -\u003e toRefresh[] Action-\u003e\u003eModel: revalidate() Action-\u003e\u003eFore: refresh() Fore--\u003e\u003eFore: refresh-done deactivate Action Action--\u003e\u003eAction: action-performed deactivate Action When the value of a UI control changes, it will use an action to propagate that change to the model. Usually a control will execute a \u0026lt;fx-setvalue\u0026gt; action to change its value The action mutates the ModelItem state object that is associated to the control. The changed ModelItem is added to a changed array in the Model When the action has done its job it will call the model to update while executing actionPerformed(). Only actions that mutate the structure of the data will call rebuild() as the Main Dependency Graph needs to be reconstructed. Instead of using MDG (see Initialization) recalculate will re-compute all calculations for the changed nodes by creating a subgraph of the MDG that will only contain the affected ModelItems. The array of changed ModelItems will be cloned and passed as toRefresh[] to the Fore object. All ModelItems will be revalidated. refresh() is called on Fore object that will use the toRefresh array of changed ModelItems to selectively update only affected controls. This will also incorporate controls that are dependent on the changed one by using the MDG. A refresh-done event is emitted A action-performed event is emitted "},{"uri":"https://jinntec.github.io/fore-docs/tags/validation/","title":"validation","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/architecture/","title":"Architecture","tags":["Version 1.0.0","MVC"],"description":"","content":"Architecture This chapter gives some insights into the inner workings of Fore. An understanding of the principles certainly helps to get the most out of Fore.\nFore is build as a classical MVC architecture.\nModel -\u0026gt; \u0026lt;fx-model\u0026gt; Element View -\u0026gt; Fore UI Elements Controller -\u0026gt; Fore Action Elements "},{"uri":"https://jinntec.github.io/fore-docs/tags/faq/","title":"FAQ","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/","title":"Fore","tags":["Version 1.0.0"],"description":"","content":"Documentation fore - \u0026lsquo;situated in front of something else\u0026rsquo; - Merriam Webster\nDeclarative user interfaces in pure HTML. "},{"uri":"https://jinntec.github.io/fore-docs/faq/","title":"Frequently Asked Questions","tags":["Version 1.0.0","FAQ"],"description":"","content":"Frequently Asked Questions "},{"uri":"https://jinntec.github.io/fore-docs/categories/","title":"Categories","tags":[],"description":"","content":""}]