[{"uri":"https://jinntec.github.io/fore-docs/elements/model/model/","title":"&lt;fx-model&gt;","tags":["model"],"description":"","content":"The model is a direct child of \u0026lt;fx-fore\u0026gt; and is itself a container for:\n one or more \u0026lt;fx-instance\u0026gt; elements zero, one or more \u0026lt;fx-bind\u0026gt; elements zero, one or more \u0026lt;fx-submission\u0026gt; elements zero, one or more \u0026lt;fx-function\u0026gt; elements  \u0026lt;fx-model\u0026gt; \u0026lt;fx-instance\u0026gt;\u0026lt;fx-instance\u0026gt; \u0026lt;fx-instance id=\u0026#34;second\u0026#34;\u0026gt;\u0026lt;fx-instance\u0026gt; \u0026lt;fx-instance id=\u0026#34;third\u0026#34;\u0026gt;\u0026lt;fx-instance\u0026gt; \u0026lt;fx-bind\u0026gt;\u0026lt;/fx-bind\u0026gt; \u0026lt;fx-bind\u0026gt;\u0026lt;/fx-bind\u0026gt; ... \u0026lt;fx-submission id=\u0026#34;load\u0026#34;\u0026gt;\u0026lt;/fx-submission\u0026gt; \u0026lt;fx-submission id=\u0026#34;save\u0026#34;\u0026gt;\u0026lt;/fx-submission\u0026gt; \u0026lt;/fx-model\u0026gt; If there\u0026rsquo;s more than one \u0026lt;fx-instance\u0026gt; or \u0026lt;fx-submission\u0026gt; you need to add an id attribute for identification.\n"},{"uri":"https://jinntec.github.io/fore-docs/getstarted/basics/","title":"Basics","tags":["basic"],"description":"","content":"Fore is a set of Web Components sharing the prefix \u0026lsquo;fx-\u0026rsquo; that together implement a complete engine to build highly dynamic, full-featured user interfaces without any script coding.\nfx-fore is the root element containing all other elements.\n\u0026lt;fx-fore\u0026gt; ... put other Fore elements or HTML here ... \u0026lt;/fx-fore\u0026gt; In this tutorial we will subsequently add elements to this template to explore the features of Fore.\n"},{"uri":"https://jinntec.github.io/fore-docs/getstarted/","title":"Get Started","tags":["getstarted"],"description":"","content":"This tutorial will walk you through the first steps of using Fore and introduce some of the elements.\nFor further study it is highly recommended to use the huge list of demos that come with Fore. These showcase all features and how to use them in concrete working examples.\nUsing Fore To use Fore you have to add one CSS stylesheet and the Fore module to your page.\nLoading from CDN Add these tags to the head of your HTML file.\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/npm/@jinntec/fore@latest/resources/fore.css\u0026#34;\u0026gt; \u0026lt;script type=\u0026#34;module\u0026#34; src=\u0026#34;https://cdn.jsdelivr.net/npm/@jinntec/fore@latest/dist/fore-all.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; You are good to go!\nUsing local copy Download Fore from https://github.com/Jinntec/Fore/releases and unpack it to a convenient location on your disk.\nSetup a basic HTML page like this:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;/\u0026gt; \u0026lt;meta content=\u0026#34;width=device-width, minimum-scale=1, initial-scale=1, user-scalable=yes\u0026#34; name=\u0026#34;viewport\u0026#34;/\u0026gt; \u0026lt;title\u0026gt;template\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#34;[path-to-fore]/fore.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script type=\u0026#34;module\u0026#34; src=\u0026#34;[path-to-fore]/fore-all.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; \u0026lsquo;[path-to-fore]\u0026rsquo; has to be the relative path to the Fore location on your disk.\n"},{"uri":"https://jinntec.github.io/fore-docs/getstarted/mvc/","title":"The anatomy of Fore","tags":["basic","mvc","model","ui","actions"],"description":"","content":"Before stepping deeper a basic understanding of the main parts of Fore is necessary.\nFore uses a classical Model-View-Controller (MVC) architecture.\nThere are 3 basic things to remember:\n  The model (\u0026lt;fx-model\u0026gt;) holds the data and refreshes the User Interface (UI) according to the state of the model.\n  When the user interacts with a page the UI will trigger Actions to change the data in the model.\n  Actions will do the actual mutation of the data like setting a value, replacing, inserting or deleting a data node.\n  The term \u0026lsquo;data node\u0026rsquo; does not mean it needs to be a DOM node. It can also point to a JSON property or some other data item.\n "},{"uri":"https://jinntec.github.io/fore-docs/elements/","title":"","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/getstarted/hello/","title":"Hello World","tags":["basic","model","instance"],"description":"","content":"What can be learned here:\n the basic structure of Fore \u0026lt;fx-model\u0026gt; and \u0026lt;fx-instance\u0026gt; elements using a Template Expression  Hello World - Step by Step Each \u0026lt;fx-fore\u0026gt; element has a single model.\n1. Add the model First step to create a data-bound \u0026lsquo;Hello World\u0026rsquo; example is to add a model.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model\u0026gt;\u0026lt;/fx-model\u0026gt; \u0026lt;/fx-fore\u0026gt;  The \u0026lt;fx-model\u0026gt; is a direct child of the \u0026lt;fx-fore\u0026gt; element.\n 2. Add some data Not very existing so far so add some data:\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;greeting\u0026gt;hello world!\u0026lt;/greeting\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;/fx-fore\u0026gt; Data are kept in instances. A model can have as many instances as needed.\nCurrently Fore supports XML and JSON as data formats. However other formats like e.g. CSV can be added.\n 3. Add some UI The final step is to add some UI to bind to our data.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;greeting\u0026gt;hello world!\u0026lt;/greeting\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;h1\u0026gt;My first Fore page\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;{greeting}\u0026lt;/h2\u0026gt; \u0026lt;/fx-fore\u0026gt; Here we use a simple Template Expression to output the data of the node \u0026lsquo;greeting\u0026rsquo;.\nA Template Expression is enclosed in curly brackets and binds to some data node in an instance. You can put them everywhere within the UI of a \u0026lt;fx-fore\u0026gt; element either within text nodes or attributes nodes.\nLive Result: The blueish shaded area below shows Fore running inside of this page. We use live example throughout this documentation.\n     hello world!    My first Fore page {greeting} {greeting}  "},{"uri":"https://jinntec.github.io/fore-docs/getstarted/todo/","title":"todo","tags":["basic","repeat","actions","controls"],"description":"","content":"What can be learned here:\n the use of \u0026lt;fx-repeat\u0026gt; element data binding and resolution using a constraint using controls using insert and delete action  Todo Application Let\u0026rsquo;s go for a bit more fancy example and learn about some new elements.\nIn this tutorial we add some real interaction, give some feedback messages to the user and actually change our data.\nIt will introduce you to \u0026lt;fx-repeat\u0026gt; element that is one of the container elements available in Fore.\nSetting up the model For our todo app we\u0026rsquo;d like to have a list of todos along with a completion and a due date.\nOur data model for a single todo looks like this:\n\u0026lt;task complete=\u0026#34;\u0026#34; due=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/task\u0026gt; Lets put that into Fore and add some dummy data to play with.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;/fx-fore\u0026gt; Introducing \u0026lt;fx-repeat\u0026gt; For displaying a list of todos we\u0026rsquo;ll use the \u0026lt;fx-repeat\u0026gt; element which will show all todos in a list.\nWe add the repeat alongside the model in our markup.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt;{.}\u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt; Data Binding - the ref Attribute The ref attribute is used throughout Fore on many elements. It uses binding expressions to link to some data node.\nIn our case the binding expression is simply \u0026rsquo;task\u0026rsquo; and will point to task elements in our data.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt;{.}\u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt; Result so far\n   Make tutorial part 1 Pick up Milk     {.}    A repeat always has a \u0026lt;template\u0026gt; child which is the blueprint for rendering one bound item.\nIt just contains a div and the Template Expression of \u0026lsquo;{.}\u0026rsquo;.\n\u0026quot;.\u0026quot; means the current node which is the bound task node.\nThis is known as \u0026lsquo;scoped resolution\u0026rsquo; and means that binding expressions are always evaluated relatively to their parent binding expression (aka ref attributes).\n Adding controls In this step we add some controls to the repeat template.\nFore uses a generic \u0026lt;fx-control\u0026gt; element to bind a concrete widget (like a native \u0026lt;input\u0026gt;) to the model.\nThis has the advantage that there\u0026rsquo;s no need for a big list of different controls to be supported but instead just use existing ones.\nIn this example simple native browser input controls are used.\n\u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;fx-control ref=\u0026#34;@complete\u0026#34; value-prop=\u0026#34;checked\u0026#34; update-event=\u0026#34;input\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;checkbox\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-control class=\u0026#34;{@complete}\u0026#34; id=\u0026#34;task\u0026#34; ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-control\u0026gt; \u0026lt;fx-control ref=\u0026#34;@due\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;date\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-trigger class=\u0026#34;btn delete\u0026#34;\u0026gt; \u0026lt;button\u0026gt;x\u0026lt;/button\u0026gt; \u0026lt;fx-delete ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-delete\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt;  Note the second \u0026lt;fx-control\u0026gt; which is empty. If no control is given as child it will default to a \u0026lt;input type=\u0026quot;text\u0026quot;\u0026gt; control which is auto-created to save some typing.\n Here 3 \u0026lt;fx-control\u0026gt;s and 2 \u0026lt;fx-trigger\u0026gt; elements have been added.\nThe controls bind to the respective nodes in the data and use:\n a checkbox for \u0026lsquo;@complete\u0026rsquo; a text field for task text a date input for \u0026lsquo;@due\u0026rsquo; date  The \u0026lsquo;@\u0026rsquo; character addresses an attribute of an XML node. Scoped resolution will result in the binding expression \u0026rsquo;task[1]/@complete\u0026rsquo; for the first todo.\n \u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;h1\u0026gt;Todo \u0026lt;fx-trigger class=\u0026#34;btn add\u0026#34;\u0026gt; \u0026lt;button\u0026gt;add\u0026lt;/button\u0026gt; \u0026lt;fx-insert ref=\u0026#34;task\u0026#34; at=\u0026#34;1\u0026#34; position=\u0026#34;before\u0026#34;\u0026gt;\u0026lt;/fx-insert\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;/h1\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;fx-control ref=\u0026#34;@complete\u0026#34; value-prop=\u0026#34;checked\u0026#34; update-event=\u0026#34;input\u0026#34;\u0026gt; \u0026lt;input class=\u0026#34;widget\u0026#34; type=\u0026#34;checkbox\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-control class=\u0026#34;{@complete}\u0026#34; id=\u0026#34;task\u0026#34; ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-control\u0026gt; \u0026lt;fx-control ref=\u0026#34;@due\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;date\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-trigger class=\u0026#34;btn delete\u0026#34;\u0026gt; \u0026lt;button\u0026gt;delete\u0026lt;/button\u0026gt; \u0026lt;fx-delete ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-delete\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt; The first \u0026lt;fx-trigger\u0026gt; is contained within the \u0026lt;h1\u0026gt; and inserts a new todo at the top of the list.\nThe \u0026lt;fx-trigger\u0026gt; within the repeat will display a button and allow to delete a todo from the list with the \u0026lt;fx-delete\u0026gt; action.\nThe todo list with add and delete   Make tutorial part 1 Pick up Milk    Todo add         delete       This is the barebones of the todo app. Next chapter will introduce some refinements.\n"},{"uri":"https://jinntec.github.io/fore-docs/getstarted/todo-refined/","title":"todo refined","tags":["basic","repeat","actions","controls"],"description":"","content":"What can be learned here:\n adding a counter insert from a template node use \u0026lt;fx-bind\u0026gt; to require an value  Todo refined In last chapter the bare minimum for the todo app were created.\nIn this chapter we\u0026rsquo;d like to make some improvements:\n show a counter for our todos hide or show completed todos make sure we can handle an empty list  Extending our data model Let\u0026rsquo;s add a couple of nodes to our data model to cover our objectives.\n\u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;template\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;\u0026#34;\u0026gt;new task\u0026lt;/task\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;showclosed\u0026gt;false\u0026lt;/showclosed\u0026gt; \u0026lt;/data\u0026gt; Adding the counter Starting with the counter we added this above the repeat\n \u0026lt;div class=\u0026#34;info\u0026#34;\u0026gt; You have {count(task)} completed tasks \u0026lt;/div\u0026gt; The Template Expression will output the number of task nodes in the data.\ncount() is an built-in XPath 3.1 function we\u0026rsquo;re using to get the number of todos. XPath offers a big library of functions.\n Fixing our repeat If you\u0026rsquo;ve played with the example from last chapter and have deleted all todos and trying to re-add one you have run into problems. It simply refuses to create a new repeat entry.\nThis is due to the default behavior of \u0026lt;fx-insert\u0026gt;. It tries to use the last item in the list as a template for insertion. If there\u0026rsquo;s none left, the nodeset is empty and the \u0026lt;fx-insert\u0026gt; will do nothing.\nThe origin attribute handles this sitution and allows us to bind to a template node to use for the insert.\nBy changing the trigger from\n\u0026lt;fx-trigger class=\u0026#34;btn add\u0026#34;\u0026gt; \u0026lt;button\u0026gt;add\u0026lt;/button\u0026gt; \u0026lt;fx-insert ref=\u0026#34;task\u0026#34; at=\u0026#34;1\u0026#34; position=\u0026#34;before\u0026#34;\u0026gt;\u0026lt;/fx-insert\u0026gt; \u0026lt;/fx-trigger\u0026gt; into\n\u0026lt;fx-trigger class=\u0026#34;btn add\u0026#34;\u0026gt; \u0026lt;button\u0026gt;+\u0026lt;/button\u0026gt; \u0026lt;fx-insert ref=\u0026#34;task\u0026#34; at=\u0026#34;1\u0026#34; position=\u0026#34;before\u0026#34; origin=\u0026#34;template/task\u0026#34;\u0026gt;\u0026lt;/fx-insert\u0026gt; \u0026lt;/fx-trigger\u0026gt; Now the insert will evaluate the origin attribute and take that node to insert into the list.\nBy using this technique you can also apply some defaults for new entries e.g. a todo will now be complete=\u0026quot;false\u0026quot; by default.\nAdding constraints Certainly at some point you\u0026rsquo;d like to save your todo list and it makes not much sense to have a todo without a text.\nLet\u0026rsquo;s create a constraint for that by introducing a bind element:\n\u0026lt;fx-bind ref=\u0026#34;task\u0026#34; required=\u0026#34;true()\u0026#34;\u0026gt;\u0026lt;/fx-bind\u0026gt; The required attribute takes an boolean XPath expression which will automatically be applied by the model and re-evaluated whenever this is required.\nFore uses XPath to bind nodes or make calculations. To learn more about XPath and play with it, have a look at fontoXPath playground\n A bind applies a constraint on a bind node or applies a calculation to it. It may also have an alert message when a constraint fails.\nAdd the bind to the model somewhere.\nTip: though not strictly necessary it makes sense to group your \u0026lt;fx-instance\u0026gt;, \u0026lt;fx-bind\u0026gt;,\u0026lt;fx-submission\u0026gt; and \u0026lt;fx-function\u0026gt; elements for a better overview when things get more complex.\n \u0026lt;fx-fore\u0026gt; \u0026lt;fx-model id=\u0026#34;record\u0026#34;\u0026gt; \u0026lt;fx-instance\u0026gt; \u0026lt;data\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-05\u0026#34;\u0026gt;Make tutorial part 1\u0026lt;/task\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;2022-06-15\u0026#34;\u0026gt;Pick up Milk\u0026lt;/task\u0026gt; \u0026lt;template\u0026gt; \u0026lt;task complete=\u0026#34;false\u0026#34; due=\u0026#34;\u0026#34;\u0026gt;new task\u0026lt;/task\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;count\u0026gt;1\u0026lt;/count\u0026gt; \u0026lt;showclosed\u0026gt;false\u0026lt;/showclosed\u0026gt; \u0026lt;/data\u0026gt; \u0026lt;/fx-instance\u0026gt; \u0026lt;fx-bind ref=\u0026#34;task\u0026#34; required=\u0026#34;true()\u0026#34;\u0026gt;\u0026lt;/fx-bind\u0026gt; \u0026lt;/fx-model\u0026gt; \u0026lt;h1\u0026gt;Todo\u0026lt;/h1\u0026gt; \u0026lt;fx-trigger class=\u0026#34;btn add\u0026#34;\u0026gt; \u0026lt;button\u0026gt;+\u0026lt;/button\u0026gt; \u0026lt;fx-insert ref=\u0026#34;task\u0026#34; at=\u0026#34;1\u0026#34; position=\u0026#34;before\u0026#34; origin=\u0026#34;template/task\u0026#34;\u0026gt;\u0026lt;/fx-insert\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;div class=\u0026#34;info\u0026#34;\u0026gt; You have {count(instance()/task[@complete=\u0026#39;true\u0026#39;])} completed tasks \u0026lt;/div\u0026gt; \u0026lt;fx-repeat id=\u0026#34;task\u0026#34; ref=\u0026#34;task\u0026#34;\u0026gt; \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;fx-control ref=\u0026#34;@complete\u0026#34; value-prop=\u0026#34;checked\u0026#34; update-event=\u0026#34;input\u0026#34;\u0026gt; \u0026lt;input class=\u0026#34;widget\u0026#34; type=\u0026#34;checkbox\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-control class=\u0026#34;{@complete}\u0026#34; id=\u0026#34;task\u0026#34; ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-control\u0026gt; \u0026lt;fx-control ref=\u0026#34;@due\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;date\u0026#34;\u0026gt; \u0026lt;/fx-control\u0026gt; \u0026lt;fx-trigger class=\u0026#34;btn delete\u0026#34;\u0026gt; \u0026lt;button\u0026gt;delete\u0026lt;/button\u0026gt; \u0026lt;fx-delete ref=\u0026#34;.\u0026#34;\u0026gt;\u0026lt;/fx-delete\u0026gt; \u0026lt;/fx-trigger\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/fx-repeat\u0026gt; \u0026lt;/fx-fore\u0026gt; Result   Make tutorial part 1 Pick up Milk  new task  1 false   0\" alert=\"what's your todo?\"  Todo  add     You have {count(instance()/task[@complete='true'])} completed tasks       delete       Now you can delete all entries and create new ones afterwards.\n"},{"uri":"https://jinntec.github.io/fore-docs/elements/model/","title":"model","tags":["elements","model"],"description":"","content":"Model Elements This chapter describes all elements belonging to the Fore Model.\n"},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/","title":"UI","tags":["elements","UI"],"description":"","content":"UI Elements This chapter describes all user interface elements.\n"},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/","title":"Actions","tags":["elements actions"],"description":"","content":"Action Elements This chapter describes all Action elements.\n"},{"uri":"https://jinntec.github.io/fore-docs/tags/actions/","title":"actions","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/basic/","title":"basic","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/controls/","title":"controls","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/instance/","title":"instance","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/model/","title":"model","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/mvc/","title":"mvc","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/repeat/","title":"repeat","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/ui/","title":"UI","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/action/","title":"&lt;fx-action&gt;","tags":["elements actions"],"description":"","content":"Description fx-action is a container action element that can take other actions as children and defer their update cycle to the end of the action block.\nThis is useful when you e.g. want to set several values at once without the cost of each action to be recalculated, revalidated and refreshed.\nScript Actions It is possible to call JavaScript from an fx-action by using the src attribute. For an example see script actions or the source of this file (doc/reference.html).\nAttributes    Name Description     delay delay before action is executed in milliseconds.   event the event name this action is listening to   if boolean XPath expression. Action is only executed if this returns true.   src optional attribute to point to a JavaScript file containing a single function to be called.   target id reference to element this action attaches to   while boolean XPath expression. Action is only executed if ìf and while return true.    Examples  Actions the \u0026lsquo;delay\u0026rsquo; attribute Events Custom Events Submission Demo Submission Chaining  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/alert/","title":"&lt;fx-alert&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/append/","title":"&lt;fx-append&gt;","tags":["elements actions"],"description":"","content":"Description Appends an entry to an fx-repeat.\n Note: this is deprecated. Please use fx-insert.\n Attributes    Name Description     ref the XPath ref to append to   repeat the fx-repeat to append to    Examples  todo nested todo TEI header editor sample  "},{"uri":"https://jinntec.github.io/fore-docs/elements/model/bind/","title":"&lt;fx-bind&gt;","tags":["elements","model"],"description":"","content":"Description fx-bind element attaches constraints and calculations to instance nodes.\nAttributes    Name Description     ref XPath pointing to node(s) the bind is attaching to   calculate XPath expression to be calculated. Result will become value of node(s) referenced by ref   constraint boolean XPath expression to determine validity of node(s)   readonly boolean XPath expression to determine readonly/readwrite state   relevant boolean XPath expression to determine relevant/non-relevant state   required boolean XPath expression to determine required/optional state   type datatype    Examples  nested Binding Binding Hello Simple Calculate todo Recalculate Revalidation Submission Relevance Processing  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/case/","title":"&lt;fx-case&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/confirm/","title":"&lt;fx-confirm&gt;","tags":["elements actions"],"description":"","content":"Description Displays simple confirmation dialog. Action will only execute if confirmation returns true.\nAttributes    Name Description     message Message to display for confirmation.    Action Attributes    Name Description     delay delay before action is executed in milliseconds.   event the event name this action is listening to   if boolean XPath expression. Action is only executed if this returns true.   target id reference to element this action attaches to   while boolean XPath expression. Action is only executed if ìf and while return true.    Examples  Project Task planner  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/container/","title":"&lt;fx-container&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/control/","title":"&lt;fx-control&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/delete/","title":"&lt;fx-delete&gt;","tags":["elements actions"],"description":"","content":"Description Deletes a node from a nodeset.\nAction Attributes    Name Description     delay delay before action is executed in milliseconds.   event the event name this action is listening to   if boolean XPath expression. Action is only executed if this returns true.   target id reference to element this action attaches to   while boolean XPath expression. Action is only executed if ìf and while return true.    fx-delete Attributes    Name Description     repeatId id reference to fx-repeat to delete from. If not present fx-delete will use next repeatitem in ancestor tree.    Examples  todo nested todo TEI header editor sample  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/dialog/","title":"&lt;fx-dialog&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/dispatch/","title":"&lt;fx-dispatch&gt;","tags":["elements actions"],"description":"","content":"Description Action to dispatch an event with optional parameters to specific targets.\nTo specify event properties the fx-property element is used.\nfx-dispatch will use id resolution within fx-repeat elements to resolve the id in scope of current occurence.\nAttributes    Name Description     name name of event to dispatch   targetid id reference of element to dispatch to    Inherited Action Attributes    Name Description     delay delay before action is executed in milliseconds.   event the event name this action is listening to   if boolean XPath expression. Action is only executed if this returns true.   target id reference to element this action attaches to   while boolean XPath expression. Action is only executed if ìf and while return true.    Examples  dispatch with properties fx-dispatch action  "},{"uri":"https://jinntec.github.io/fore-docs/elements/model/functions/","title":"&lt;fx-function&gt;","tags":["elements","model"],"description":"","content":"Model "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/hide/","title":"&lt;fx-hide&gt;","tags":["elements actions"],"description":"","content":"Description Action to hide a fx-dialog.\nAttributes    Name Description     dialog idref of an fx-dialog element.    Examples  fx-dialog  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/hint/","title":"&lt;fx-hint&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/insert/","title":"&lt;fx-insert&gt;","tags":["elements actions"],"description":"","content":"Description Action to insert node(s) into instance data.\nGeneral Binding Attributes    Name Description     ref XPath pointing to node(s) the bind is attaching to    Attributes    Name Description Default     at index position in nodeset where to insert new node(s) 0   position with regard to \u0026lsquo;at\u0026rsquo; can be either \u0026lsquo;before\u0026rsquo; or \u0026lsquo;after\u0026rsquo; after   origin XPath pointing to nodes to be inserted into referenced nodeset    keepValues marker attribute. When present will keep text-values of origin nodes     Events    Name Description     insert dispatched when nodes have been inserted    detail[insertedNodes] - the inserted nodes    detail[position] - the position of the insert in the nodeset    Examples  Insert into inhomogenious nodeset insert action insert action 2 TEI header editor sample todo the while attribute  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/inspector/","title":"&lt;fx-inspector&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/model/instance/","title":"&lt;fx-instance&gt;","tags":["elements","model"],"description":"","content":"Description Holds the data of the model. A fx-model may have as many fx-instance elements as necessary.\nAttributes    Name Description default     id id of the instance for addressing in refs default   src url to load instance from via http get    type \u0026lsquo;xml\u0026rsquo; or \u0026lsquo;json\u0026rsquo; or \u0026lsquo;html\u0026rsquo; are supported by now xml   xpath-default-namespace namespace to be used with unprefixed XPathes emtpy    Examples  Instances Instance super powers the fx-output element  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/items/","title":"&lt;fx-items&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/message/","title":"&lt;fx-message&gt;","tags":["elements actions"],"description":"","content":"Description Display a message to the user.\nAttributes    Name Description default     level \u0026lsquo;modal\u0026rsquo;, \u0026lsquo;modeless\u0026rsquo; or \u0026rsquo;ephemeral\u0026rsquo; ephemeral    \u0026lsquo;modal\u0026rsquo; - modal dialog window     \u0026lsquo;sticky\u0026rsquo; - sticky popup message     \u0026rsquo;ephemeral\u0026rsquo; - auto-closing popup message default   value XPath expression which resolves to message     Action Attributes    Name Description     delay delay before action is executed in milliseconds.   event the event name this action is listening to   if boolean XPath expression. Action is only executed if this returns true.   target id reference to element this action attaches to   while boolean XPath expression. Action is only executed if ìf and while return true.    Examples  fx-message actions Binding the delay attribute fx-control Hello World the if attribute instances lazy modelItem creation during UI init the while attribute  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/output/","title":"&lt;fx-output&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/refresh/","title":"&lt;fx-refresh&gt;","tags":["elements actions"],"description":"","content":"Description Triggers immediate refresh.\nAttributes No Attributes\nAction Attributes    Name Description     delay delay before action is executed in milliseconds.   event the event name this action is listening to   if boolean XPath expression. Action is only executed if this returns true.   target id reference to element this action attaches to   while boolean XPath expression. Action is only executed if ìf and while return true.    Examples  the delay attribute Randomizer the while attribute  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/repeat/","title":"&lt;fx-repeat&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/replace/","title":"&lt;fx-replace&gt;","tags":["elements actions"],"description":"","content":"Description Replaces a node with another.\nAttributes    Name Description     ref XPath reference pointing to the bound node   with XPath expression to point to a node for replacement    Action Attributes see Action\nExamples  Replace Action  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/send/","title":"&lt;fx-send&gt;","tags":["elements actions"],"description":"","content":"Description Triggers a submission. Submission with given id must exist otherwise error is thrown.\nAttributes    Name Description     submission required idref to fx-submission element.    Action Attributes    Name Description     delay delay before action is executed in milliseconds.   event the event name this action is listening to   if boolean XPath expression. Action is only executed if this returns true.   target id reference to element this action attaches to   while boolean XPath expression. Action is only executed if ìf and while return true.    Examples  auth Submission Relevance Processing Submission serialization Submission Demo Submission Demo 2 Submission serialization Submission Chaining submit with ref  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/setvalue/","title":"&lt;fx-setvalue&gt;","tags":["elements actions"],"description":"","content":"Description Sets a value to a bound node.\nAttributes    Name Description     ref XPath reference pointing to the bound node   value XPath expression to be set as value    Action Attributes    Name Description     delay delay before action is executed in milliseconds.   event the event name this action is listening to   if boolean XPath expression. Action is only executed if this returns true.   target id reference to element this action attaches to   while boolean XPath expression. Action is only executed if ìf and while return true.    Examples  Action auth binding the delay attribute events events 2 hello  "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/show/","title":"&lt;fx-show&gt;","tags":["elements actions"],"description":"","content":"Description Action to display a fx-dialog.\nAttributes    Name Description     dialog idref of an fx-dialog element.    Examples  fx-dialog  "},{"uri":"https://jinntec.github.io/fore-docs/elements/model/submission/","title":"&lt;fx-submission&gt;","tags":["elements","model"],"description":"","content":"Model "},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/toggle/","title":"&lt;fx-toggle&gt;","tags":["elements actions"],"description":"","content":"Description Action to toggle a fx-switch element.\nAttributes    Name Description     case id of fx-case element to show    Examples  auth repeat in switch Simple TEI Header switch  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/switch/","title":"&lt;fx-trigger&gt;","tags":["elements","ui"],"description":"","content":"  "},{"uri":"https://jinntec.github.io/fore-docs/elements/ui/trigger/","title":"&lt;fx-trigger&gt;","tags":["elements","ui"],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/elements/actions/update/","title":"&lt;fx-update&gt;","tags":["elements actions"],"description":"","content":" "},{"uri":"https://jinntec.github.io/fore-docs/tags/elements/","title":"elements","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/elements-actions/","title":"elements actions","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/getstarted/","title":"getstarted","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/tags/submission/","title":"submission","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/getstarted/submission/","title":"Submissions","tags":["getstarted","submission"],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/","title":"Fore","tags":["Version 1.0.0"],"description":"","content":"Documentation fore - \u0026lsquo;situated in front of something else\u0026rsquo; - Merriam Webster\n Descriptive user interfaces in pure HTML. "},{"uri":"https://jinntec.github.io/fore-docs/tags/version-1.0.0/","title":"Version 1.0.0","tags":[],"description":"","content":""},{"uri":"https://jinntec.github.io/fore-docs/categories/","title":"Categories","tags":[],"description":"","content":""}]