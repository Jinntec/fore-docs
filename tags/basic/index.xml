<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basic on Fore Documentation</title><link>https://jinntec.github.io/fore-docs/tags/basic/</link><description>Recent content in Basic on Fore Documentation</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 20 May 2022 16:08:59 +0200</lastBuildDate><atom:link href="https://jinntec.github.io/fore-docs/tags/basic/index.xml" rel="self" type="application/rss+xml"/><item><title>Basics</title><link>https://jinntec.github.io/fore-docs/getstarted/basics/</link><pubDate>Fri, 20 May 2022 16:08:59 +0200</pubDate><guid>https://jinntec.github.io/fore-docs/getstarted/basics/</guid><description>Fore is a set of Web Components sharing the prefix &amp;lsquo;fx-&amp;rsquo; that together implement a complete engine to build highly dynamic, full-featured user interfaces without any script coding.
&amp;lt;fx-fore&amp;gt; is the root element containing all other elements.
&amp;lt;fx-fore&amp;gt; ... put other Fore elements or HTML here ... &amp;lt;/fx-fore&amp;gt; In this tutorial we will subsequently add elements to this template to explore the features of Fore.</description></item><item><title>The anatomy of Fore</title><link>https://jinntec.github.io/fore-docs/getstarted/mvc/</link><pubDate>Fri, 20 May 2022 16:08:59 +0200</pubDate><guid>https://jinntec.github.io/fore-docs/getstarted/mvc/</guid><description>Before stepping deeper a basic understanding of the main parts of Fore is helpful.
Fore elements fall into 3 categories:
The model elements: the model (&amp;lt;fx-model&amp;gt;) and its children hold the data and their state, calculate, validate and submit the data. The state will be reflected in the UI after a refresh.
The UI elements: establish a two-way binding between a data value and a control. When the user interacts with a UI element it will trigger Actions to change the data in the model or otherwise interact with the UI.</description></item><item><title>Hello World</title><link>https://jinntec.github.io/fore-docs/getstarted/hello/</link><pubDate>Fri, 20 May 2022 16:08:59 +0200</pubDate><guid>https://jinntec.github.io/fore-docs/getstarted/hello/</guid><description>What can be learned here:
the basic structure of Fore &amp;lt;fx-model&amp;gt; and &amp;lt;fx-instance&amp;gt; elements using a Template Expression Hello World - Step by Step Each &amp;lt;fx-fore&amp;gt; element has a single model.
1. Add the model First step to create a data-bound &amp;lsquo;Hello World&amp;rsquo; example is to add a model.
&amp;lt;fx-fore&amp;gt; &amp;lt;fx-model&amp;gt;&amp;lt;/fx-model&amp;gt; &amp;lt;/fx-fore&amp;gt; The &amp;lt;fx-model&amp;gt; is a direct child of the &amp;lt;fx-fore&amp;gt; element.
2. Add some data Not very exciting so far, so add some data:</description></item><item><title>Todo App</title><link>https://jinntec.github.io/fore-docs/getstarted/todo/</link><pubDate>Fri, 20 May 2022 16:08:59 +0200</pubDate><guid>https://jinntec.github.io/fore-docs/getstarted/todo/</guid><description>What can be learned here:
the use of &amp;lt;fx-repeat&amp;gt; element data binding and resolution using a constraint using controls using insert and delete action Todo Application Let&amp;rsquo;s go for a bit more fancy example - a simple todo app - and learn about some new elements.
In this tutorial we add some real interaction, give some feedback messages to the user and actually change our data.
It will introduce you to &amp;lt;fx-repeat&amp;gt; element that is one of the container elements available in Fore.</description></item><item><title>Todo App refined</title><link>https://jinntec.github.io/fore-docs/getstarted/todo-refined/</link><pubDate>Fri, 20 May 2022 16:08:59 +0200</pubDate><guid>https://jinntec.github.io/fore-docs/getstarted/todo-refined/</guid><description>What can be learned here:
adding a counter insert from a template node use &amp;lt;fx-bind&amp;gt; to require a value Todo refined In the previous chapter the bare minimum for the todo app were created.
In this chapter we&amp;rsquo;d like to make some improvements:
show a counter for our todos hide or show completed todos make sure we can handle an empty list Extending our data model Let&amp;rsquo;s add a couple of nodes to our data model to cover our objectives.</description></item></channel></rss>