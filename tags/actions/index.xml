<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>actions on Fore Documentation</title><link>https://jinntec.github.io/fore-docs/tags/actions/</link><description>Recent content in actions on Fore Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 20 May 2022 16:08:59 +0200</lastBuildDate><atom:link href="https://jinntec.github.io/fore-docs/tags/actions/index.xml" rel="self" type="application/rss+xml"/><item><title>The anatomy of Fore</title><link>https://jinntec.github.io/fore-docs/getstarted/mvc/</link><pubDate>Fri, 20 May 2022 16:08:59 +0200</pubDate><guid>https://jinntec.github.io/fore-docs/getstarted/mvc/</guid><description>Before stepping deeper a basic understanding of the main parts of Fore is helpful.
Fore uses a classical Model-View-Controller (MVC) architecture.
There are 3 basic things to remember:
The model (&amp;lt;fx-model&amp;gt;) holds the data and their state. This state will be used during refresh to apply changes to the UI.
When the user interacts with a page the UI will trigger Actions to change the data in the model.
Actions will do the actual mutation of the data like setting a value, replacing, inserting or deleting a data node.</description></item><item><title>todo</title><link>https://jinntec.github.io/fore-docs/getstarted/todo/</link><pubDate>Fri, 20 May 2022 16:08:59 +0200</pubDate><guid>https://jinntec.github.io/fore-docs/getstarted/todo/</guid><description>What can be learned here:
the use of &amp;lt;fx-repeat&amp;gt; element data binding and resolution using a constraint using controls using insert and delete action Todo Application Let&amp;rsquo;s go for a bit more fancy example and learn about some new elements.
In this tutorial we add some real interaction, give some feedback messages to the user and actually change our data.
It will introduce you to &amp;lt;fx-repeat&amp;gt; element that is one of the container elements available in Fore.</description></item><item><title>todo refined</title><link>https://jinntec.github.io/fore-docs/getstarted/todo-refined/</link><pubDate>Fri, 20 May 2022 16:08:59 +0200</pubDate><guid>https://jinntec.github.io/fore-docs/getstarted/todo-refined/</guid><description>What can be learned here:
adding a counter insert from a template node use &amp;lt;fx-bind&amp;gt; to require an value Todo refined In last chapter the bare minimum for the todo app were created.
In this chapter we&amp;rsquo;d like to make some improvements:
show a counter for our todos hide or show completed todos make sure we can handle an empty list Extending our data model Let&amp;rsquo;s add a couple of nodes to our data model to cover our objectives.</description></item><item><title>&lt;fx-action></title><link>https://jinntec.github.io/fore-docs/elements/actions/action/</link><pubDate>Tue, 14 Dec 2021 17:41:11 +0100</pubDate><guid>https://jinntec.github.io/fore-docs/elements/actions/action/</guid><description>Description &amp;lt;fx-action&amp;gt; is a container action element that can take other actions as children and defer their update cycle to the end of the action block.
This is useful when you e.g. want to set several values at once without the cost of each action to be recalculated, revalidated and refreshed.
Script Actions It is possible to call JavaScript from an &amp;lt;fx-action&amp;gt; by using the src attribute. For an example see script actions or the source of this file (doc/reference.</description></item></channel></rss>