<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lifecycle on Fore Documentation</title><link>https://jinntec.github.io/fore-docs/tags/lifecycle/</link><description>Recent content in Lifecycle on Fore Documentation</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 14 Dec 2021 17:41:11 +0100</lastBuildDate><atom:link href="https://jinntec.github.io/fore-docs/tags/lifecycle/index.xml" rel="self" type="application/rss+xml"/><item><title>Initialization</title><link>https://jinntec.github.io/fore-docs/architecture/initialization/</link><pubDate>Tue, 14 Dec 2021 17:41:11 +0100</pubDate><guid>https://jinntec.github.io/fore-docs/architecture/initialization/</guid><description>A defined lifecycle is essential for consistent and efficient processing of state changes during the lifetime of a &amp;lt;fx-fore&amp;gt; element.
The diagram below might read a bit complex at first sight but pretty much touches all important areas of Fore and might be a useful read for the interested developer.
Initialization of Fore sequenceDiagram autonumber participant Fore participant Model participant Instances participant Bindings participant UI Note over Fore: find or generate Model activate Model Fore->>Model: modelConstruct() loop Model->>Instances: init() end Instances-->>Model: instance-loaded activate Model Model->>Model: rebuild() loop Model->>Bindings: init() activate Bindings Bindings->>Model: ModelItems deactivate Bindings end deactivate Model Model->>Model: recalculate() Model->>Model: revalidate() Model-->>Fore: modelConstructDone activate Fore Fore->>Fore: initUI() loop Fore->>UI: refresh() activate UI UI->>UI: updateState deactivate UI end Fore-->>Fore: refresh-done Fore-->>Fore: ready deactivate Fore deactivate Model When a &amp;lt;fx-fore&amp;gt; element gets connected, it will wait for all children to be connected and then call modelConstruct() on the &amp;lt;fx-model&amp;gt; element to kick off the initialization process.</description></item><item><title>Update Cycle</title><link>https://jinntec.github.io/fore-docs/architecture/update-cycle/</link><pubDate>Tue, 14 Dec 2021 17:41:11 +0100</pubDate><guid>https://jinntec.github.io/fore-docs/architecture/update-cycle/</guid><description>The update cycle is triggered whenever a user interacts with a control e.g. by changing its value.
Likewise this can be triggered by Actions being triggered by some state event like e.g. value-changed event.
sequenceDiagram autonumber participant User participant Control participant Action participant Model participant Fore User->>Control: interact Control->>Action: execute activate Action Action->>Action: mutate ModelItem Action->>Model: add to changed list activate Action Action->>Action: actionPerformed() Action->>Model: rebuild() Action->>Model: recalculate() Action->>Fore: changed[] -> toRefresh[] Action->>Model: revalidate() Action->>Fore: refresh() Fore-->>Fore: refresh-done deactivate Action Action-->>Action: action-performed deactivate Action When the value of a UI control changes, it will use an action to propagate that change to the model.</description></item></channel></rss>