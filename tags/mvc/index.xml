<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MVC on Fore Documentation</title><link>https://jinntec.github.io/fore-docs/tags/mvc/</link><description>Recent content in MVC on Fore Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 20 May 2022 16:08:59 +0200</lastBuildDate><atom:link href="https://jinntec.github.io/fore-docs/tags/mvc/index.xml" rel="self" type="application/rss+xml"/><item><title>The anatomy of Fore</title><link>https://jinntec.github.io/fore-docs/getstarted/mvc/</link><pubDate>Fri, 20 May 2022 16:08:59 +0200</pubDate><guid>https://jinntec.github.io/fore-docs/getstarted/mvc/</guid><description>Before stepping deeper a basic understanding of the main parts of Fore is helpful.
Fore uses a classical Model-View-Controller (MVC) architecture.
There are 3 basic things to remember:
The model (&amp;lt;fx-model&amp;gt;) holds the data and their state. This state will be used during refresh to apply changes to the UI.
When the user interacts with a page the UI will trigger Actions to change the data in the model.
Actions will do the actual mutation of the data like setting a value, replacing, inserting or deleting a data node.</description></item><item><title>Architecture</title><link>https://jinntec.github.io/fore-docs/architecture/</link><pubDate>Fri, 11 Dec 2020 10:42:31 +0100</pubDate><guid>https://jinntec.github.io/fore-docs/architecture/</guid><description>Architecture This chapter gives some insights into the inner workings of Fore. An understanding of the principles certainly helps to get the most out of Fore.
Fore is build as a classical MVC architecture.
Model -&amp;gt; &amp;lt;fx-model&amp;gt; Element View -&amp;gt; Fore UI Elements Controller -&amp;gt; Fore Action Elements</description></item></channel></rss>